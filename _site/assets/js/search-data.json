{"0": {
    "doc": "API documentation",
    "title": "API documentation",
    "content": " ",
    "url": "/docs/api/",
    
    "relUrl": "/docs/api/"
  },"1": {
    "doc": "API documentation",
    "title": "Table of contents",
    "content": ". | Get genome ids for a NCBI Taxonoy Id | Get phenotypic traits of a species | Get pathway complementarities for a pair of genomes . | Get complements for pair of species | . | Get competition and complementarity score between a pair of GEMs | Common errors | Python | . microbetagDB API provides programmatic access to the data. The base address to the API is https://msysbio.gbiomed.kuleuven.be/. Below you may find the syntax to retrieve the various data and/or annotations included. ",
    "url": "/docs/api/#table-of-contents",
    
    "relUrl": "/docs/api/#table-of-contents"
  },"2": {
    "doc": "API documentation",
    "title": "Get genome ids for a NCBI Taxonoy Id",
    "content": "To check whether a species is present on microbetag, one may find its corresponding NCBI Taxonomy Id and search for related genomes present on the microbetag DB. For example, assuming we are interested in the Blautia hansenii DSM 20583 strain, we find from NCBI Taxonomy that its corresponding id is 537007. Using the ncbiTaxId-to-genomeId route we may get the related genomes on microbetag DB: . curl -X GET https://msysbio.gbiomed.kuleuven.be/ncbiTaxId-to-genomeId/537007 . that returns a list of genomes used in microbetag annotations: . { \"853\": [ \"GCA_002222595\", ] } . ",
    "url": "/docs/api/#get-genome-ids-for-a-ncbi-taxonoy-id",
    
    "relUrl": "/docs/api/#get-genome-ids-for-a-ncbi-taxonoy-id"
  },"3": {
    "doc": "API documentation",
    "title": "Get phenotypic traits of a species",
    "content": "One may get the corresponding phenotypic traits of a genome present on the microbetag DB using the /phen-traits/ route and the GTDB genome id. curl -X GET https://msysbio.gbiomed.kuleuven.be/phen-traits/GCF_002222595.2 . this would return (we show only a part of the outcome) . { \"NOB\": \"NO\", \"NOBScore\": \"0.8078\", \"T3SS\": \"NO\", \"T3SSScore\": \"0.8391\", \"T6SS\": \"NO\", \"T6SSScore\": \"0.7836\", \"aSaccharolytic\": \"NO\", \"aSaccharolyticScore\": \"0.8672\", ... } . For a thorough description of the abbreviations used, have a look in the microbetag’s modules tab. | Currently, microbetag has annotations only for the GTDB representative genomes. Thus, genomes returned by the ncbiTaxId-to-genomeId route that come from other resources (e.g., MGnify, KEGG) do not have phenotypic tratis. | In case a GTDB genome returns an “Internal Server Error”, please try again replacing the “GCA” with “GCF”. | . ",
    "url": "/docs/api/#get-phenotypic-traits-of-a-species",
    
    "relUrl": "/docs/api/#get-phenotypic-traits-of-a-species"
  },"4": {
    "doc": "API documentation",
    "title": "Get pathway complementarities for a pair of genomes",
    "content": "In case you are interested in the complementarities of a specific pair of GTDB representative genomes, where genome_A is the beneficiary and genome_B the donor, one may use the genome-complements route, followed by genome_A, followed by genome_B. Here is an example: we are interested in the pathway complementarities of a Desulfurococcaceae archeon genome (GCA_011364525.1) with on of the Gram-negative bacterium Malikia spinosa (GCA_002980625.1) as its potential donor: . curl -X GET https://msysbio.gbiomed.kuleuven.be/genome-complements/GCA_011364525.1/GCA_002980625.1 . Here is its partial output: . [ [ \"M00001\", \"K01803;K21071;K01624\", \"K25026;K15916;K21071;K01624;K01803;K00150;K00927;K15635;K01689;K00873\" ] ], [ [ \"M00002\", \"K01803\", \"K01803;K00150;K00927;K15635;K01689;K00873\" ] ], [ [ \"M00003\", \"K01803\", \"K01596;K01689;K15635;K00927;K00150;K01803;K01622\" ] ], [ [ \"M00016\", \"K00928;K00215;K01586;K00674;K00821;K01778\", \"K00928;K00133;K01714;K00215;K00674;K00821;K01439;K01778;K01586\" ] ], [ [ \"M00016\", \"K00928;K14267;K00215;K01586;K00674;K01778\", \"K00928;K00133;K01714;K00215;K00674;K14267;K01439;K01778;K01586\" ] ] . Let us now describe its meaning. Each entry of the above output stands for a specific KEGG module . Get complements for pair of species . complements . curl -X GET https://msysbio.gbiomed.kuleuven.be/complements/1281578/146891 . { \"GCA_003184265.1\": { \"GCA_000015645.1\": [ [ [ \"M00010\", \"K01682\", \"K01647;K01682;K00031\", \"https://www.kegg.jp/kegg-bin/show_pathway?map00020/K01647%09%23EAD1DC/K00031%09%23EAD1DC/K01682%09%2300A898/\" ] ], . ",
    "url": "/docs/api/#get-pathway-complementarities-for-a-pair-of-genomes",
    
    "relUrl": "/docs/api/#get-pathway-complementarities-for-a-pair-of-genomes"
  },"5": {
    "doc": "API documentation",
    "title": "Get competition and complementarity score between a pair of GEMs",
    "content": "seed-scores route genome_A is the beneficiary and genome_B the donor, one may use the genome-complements route . curl -X GET https://msysbio.gbiomed.kuleuven.be/seed-scores/GCA_011364525.1/GCA_002980625.1 . ",
    "url": "/docs/api/#get-competition-and-complementarity-score-between-a-pair-of-gems",
    
    "relUrl": "/docs/api/#get-competition-and-complementarity-score-between-a-pair-of-gems"
  },"6": {
    "doc": "API documentation",
    "title": "Common errors",
    "content": "There are three possible types of client errors on API calls: . | 400 Bad requests. | 404 Not found. | . ",
    "url": "/docs/api/#common-errors",
    
    "relUrl": "/docs/api/#common-errors"
  },"7": {
    "doc": "API documentation",
    "title": "Python",
    "content": "One may use the API routes described through Python. For example, to get the microbetagDB genomes related species with NCBI Taxonomy id 853: . import requests url = \"https://msysbio.gbiomed.kuleuven.be/ncbiTaxId-to-genomeId/853\" r = requests.get(url) r.status_code 200 r.json() {\"537007\": [\"GCA_002222595.2\"]} . Furthermore, one may run microbetag directly and not through the CytoscapeApp by simply converting their abundance table or co-occurrence network in a JSON object. They would also need to provide the following arguments as part of the JSON obect: . arguments_list = [\"input_category\", \"taxonomy\", \"phenDB\", \"faprotax\", \"pathway_complement\", \"seed_scores\"] . Here is an example using an ASV abundance table as input, asking for all microbetag annotations supported: . import requests import json json_object = {} data = json.load(open(my_asv_abundance_table.tsv), \"r\") data = data.readlines() data = [line.rstrip(\"\\n\").split(\"\\t\") for line in data] json_object[\"data\"] = data arguments = {} arguments[\"input_category\"] = \"abundance\" arguments[\"taxonomy\"] = \"dada2\" arguments[\"phenDB\"] = True arguments[\"faprotax\"] = True arguments[\"pathway_complement\"] = True arguments[\"seed_scores\"] = False json_object[\"inputParameters\"] = arguments url = \"https://msysbio.gbiomed.kuleuven.be/upload-abundance-table-dev\" r = requests.post(url, json = json_object) r.text() . POSSIBLE ARGUMENT’S VALUES . input_category: [abundance_table | network] . taxonomy: [GTDB | dada2 | qiime2] . phenDB, faprotax, pathway_complement, seed_scores: [True | False] . You arguments dictionary needs to include all the arguments mentioned above. If any is not provided , microbetag will eventually fail and won’t return an annotated network. Syntax common error: make sure you do not have a / in the end of the url. If so, microbetag will never start. ",
    "url": "/docs/api/#python",
    
    "relUrl": "/docs/api/#python"
  },"8": {
    "doc": "Cytoscape App",
    "title": "Cytoscape App",
    "content": ". Here we need a step-by-step with screenshots and/or videos of the features of . ",
    "url": "/docs/cytoApp/",
    
    "relUrl": "/docs/cytoApp/"
  },"9": {
    "doc": "FAPROTAX functions",
    "title": "FAPROTAX functions",
    "content": "Here is the complete list with the metabolic or other ecologically relevant functions returned by FAPROTAX: . | methanotrophy | . | arsenate_detoxification | . | acetoclastic_methanogenesis | . | arsenate_respiration | . | methanogenesis_by_disproportionation_of_methyl_groups | . | dissimilatory_arsenate_reduction | . | methanogenesis_using_formate | . | arsenite_oxidation_detoxification | . | methanogenesis_by_CO2_reduction_with_H2 | . | arsenite_oxidation_energy_yielding | . | methanogenesis_by_reduction_of_methyl_compounds_with_H2 | . | dissimilatory_arsenite_oxidation | . | hydrogenotrophic_methanogenesis | . | anammox | . | methanogenesis | . | nitrate_denitrification | . | methanol_oxidation | . | nitrite_denitrification | . | methylotrophy | . | nitrous_oxide_denitrification | . | aerobic_ammonia_oxidation | . | denitrification | . | aerobic_nitrite_oxidation | . | chitinolysis | . | nitrification | . | knallgas_bacteria | . | sulfate_respiration | . | dark_hydrogen_oxidation | . | sulfur_respiration | . | nitrogen_fixation | . | dark_sulfite_oxidation | . | nitrate_ammonification | . | sulfite_respiration | . | nitrite_ammonification | . | thiosulfate_respiration | . | nitrite_respiration | . | respiration_of_sulfur_compounds | . | cellulolysis | . | xylanolysis | . | plant_pathogen | . | dark_sulfide_oxidation | . | oil_bioremediation | . | dark_sulfur_oxidation | . | aromatic_hydrocarbon_degradation | . | dark_thiosulfate_oxidation | . | aromatic_compound_degradation | . | dark_oxidation_of_sulfur_compounds | . | aliphatic_non_methane_hydrocarbon_degradation | . | manganese_oxidation | . | hydrocarbon_degradation | . | manganese_respiration | . | dark_iron_oxidation | . | ligninolysis | . | iron_respiration | . | fermentation | . | nitrate_respiration | . | aerobic_chemoheterotrophy | . | nitrate_reduction | . | nitrogen_respiration | . | invertebrate_parasites | . | fumarate_respiration | . | human_pathogens_septicemia | . | intracellular_parasites | . | chlorate_reducers | . | chloroplasts | . | predatory_or_exoparasitic | . | human_pathogens_pneumonia | . | human_pathogens_nosocomia | . | human_pathogens_meningitis | . | human_pathogens_gastroenteritis | . | human_pathogens_diarrhea | . | nonphotosynthetic_cyanobacteria | . | human_pathogens_all | . | photosynthetic_cyanobacteria | . | fish_parasites | . | aerobic_anoxygenic_phototrophy | . | anoxygenic_photoautotrophy_H2_oxidizing | . | anoxygenic_photoautotrophy_S_oxidizing | . | anoxygenic_photoautotrophy_Fe_oxidizing | . | anoxygenic_photoautotrophy | . | human_gut | . | human_associated | . | mammal_gut | . | animal_parasites_or_symbionts | . | oxygenic_photoautotrophy | . | photoautotrophy | . | phototrophy | . | photoheterotrophy | . | plastic_degradation | . | chemoheterotrophy | . | ureolysis | . | reductive_acetogenesis | . ",
    "url": "/docs/modules/faprotax-functions/",
    
    "relUrl": "/docs/modules/faprotax-functions/"
  },"10": {
    "doc": "Home",
    "title": "annotating microbial co-occurrence networks",
    "content": "background, documentation and a use case . Under development . View it on GitHub CytoscapeApp . ",
    "url": "/#annotating-microbial-co-occurrence-networks",
    
    "relUrl": "/#annotating-microbial-co-occurrence-networks"
  },"11": {
    "doc": "Home",
    "title": "About",
    "content": "Microbial interactions play a fundamental role in deciphering the underlying mechanisms that govern ecosystem functioning. Co-occurrence networks have been widely used for inferring microbial associations or/and interactions from metagenomic data. However, spurious associations and tool - dependence confine the network inference. The integration of previous evidence or/and knowledge can increase or decrease the confidence level of the retrieved associations. This way, associations can be further investigated and more reliable conclusions can be drawn. microbetag implements data integration techniques to annotate both the nodes (taxa) and the edges (predicted associations) of such a network to enhance microbial co-occurrence network analysis for amplicon data. Have a look at the modules tab to get an overview of the methods used. ",
    "url": "/#about",
    
    "relUrl": "/#about"
  },"12": {
    "doc": "Home",
    "title": "How to use",
    "content": "microbetag is available as a Cytoscape App Cytoscape is a well-established, widely used software for network data Integration, analysis, and visualization. All you need to do is to download and install Cytoscape and then visit the Cytoscape Appstore and search for microbetag. Otherwise, you may click Apps &gt; App manager.. after lunching Cytoscape, then search for “microbetag” in the pop-up box and click “Install”. Once microbetag is installed, you are ready to lunch it using an OTUs/ASVs (amplicon data) or bins/MAGs (shotgun data) abundance tabl as input. HOW TO USE AND INTERPRET MICROBETAG’s FINDINGS . For a thorough description of the app, please check the Cytoscape App tab. In addition, microbetag’s annotations are also available through its Application Programming Interface (API). This way, one may have direct access to the microbetagDB and may export annotations for species or pair of species of interest, without the need of a network. ",
    "url": "/#how-to-use",
    
    "relUrl": "/#how-to-use"
  },"13": {
    "doc": "Home",
    "title": "Cite us",
    "content": "In prep. ",
    "url": "/#cite-us",
    
    "relUrl": "/#cite-us"
  },"14": {
    "doc": "Home",
    "title": "Funding",
    "content": "This project was funded by an EMBO Scientific Exchange Grants and the 3D’omics Horizon project (101000309). ",
    "url": "/#funding",
    
    "relUrl": "/#funding"
  },"15": {
    "doc": "Home",
    "title": "License",
    "content": ". | microbetag is under GNU General Public License v3.0. For third-party components separate licenses apply. | . ",
    "url": "/#license",
    
    "relUrl": "/#license"
  },"16": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"17": {
    "doc": "Modules",
    "title": "Modules",
    "content": " ",
    "url": "/docs/modules",
    
    "relUrl": "/docs/modules"
  },"18": {
    "doc": "Modules",
    "title": "Table of contents",
    "content": ". | Functional annotations . | Based on FAPROTAX | Based on phenDB | . | Pathway complementarity | Seed scores based on genome-scale draft reconstructions (GEMs) | References | . microbetag gets as input either a co-occurrence network or an abundance table where either Silva or GTDB taxonomies have been used. When an abundance table is provided, microbetag firsts builds a co-occurrence network using FlashWeave [1]. Once a network is availalbe, microbetag identifies the taxonomic level that has been assigned to each entry, for example D_0__Bacteria; D_1__Firmicutes; D_2__Clostridia; D_3__Clostridiales; D_4__Ruminococcaceae; D_5__uncultured; D_6__uncultured rumen bacterium has reached the family level, while D_0__Bacteria; D_1__Actinobacteria; D_2__Coriobacteriia; D_3__Coriobacteriales; D_4__Coriobacteriaceae; D_5__Collinsella; D_6__uncultured bacterium is at the genus level and proceeds with the network annotation. The network annotation consists of 4 major modules: . | literature oriented taxa functional annotation using FAPROTAX [2] | genomic oriented taxa functional annotation using an updated, local instance of phenDB using all representative genomes of GTDB and phenotrex | pathway complementarity annotations between taxa that have been found co-correlated in the produced (or user provided) network; both taxa were considered as potential donor and beneficiary (see Pathway complementarity for more) | complementarity [3] and competition [4] seed scores between draft metabolic reconstructions of GTDB representative genomes, mapped to the input taxa using PhyloMInt (see Seed-based complementarity and competition scores for more) | . Nodes that have species or strain taxonomic annotation are mapped to their closest representative GTDB genomes and based on those, they get phenDB-like and FAPROTAX functional annotations. Taxa (nodes) that have been taxonomically annotated at the family or order level are annotated using FAPROTAX. Edges linking nodes that have been taxonomically assigned at the species or strain level, i.e. both nodes of the association have a species/strain taxonomic annotation, are annotated using the pathway complementarity and the seed scores approaches. Below, you will find further background and examples of each annotation type. ",
    "url": "/docs/modules#table-of-contents",
    
    "relUrl": "/docs/modules#table-of-contents"
  },"19": {
    "doc": "Modules",
    "title": "Functional annotations",
    "content": "Based on FAPROTAX . FAPROTAX [2] maps taxa (e.g. genera or species) to metabolic or other ecologically relevant functions based on the literature for cultured representatives. It currently comprises more than 7600 annotation rules, covering ~4700 prokaryotic clades. Each annotation rule comes with literature citations and can, thus, be independently verified. Similar 16S rRNA oriented approaches (e.g., PICRUSt, Tax4Fun etc.) estimate community gene content based on available sequenced genomes. On the contrary, FAPROTAX estimates metabolic phenotypes based on experimental evidence. The taxonomy assigned to each OTU/ASV (amplicon data) or bin (shotgun data) on the abundance table provided by the user, is mapped to a list of functions one can check here. As an example, here is how the FAPROTAX output looks like for the denitrification function for three samples (columns): . FAPROTAX returns only the ASVs present in the (user provided) abundance table that are related to the denetrification function. Numbers represent the ASV abundance in each sample. microbetag runs FAPROTAX agains the abundance table and parses the subtables (seqId_faprotax_functions_assignment) to annotate each node with the corresponding function. In case the user provides as input a co-occurrence network, microbetag runs FAPROTAX against the nodes. Based on phenDB . phenotrex enables phenotypic trait prediction on user’s metagenomic genomes/bins. Phenotrex classifiers were re-trained using the genomes provided by phenDB for each model. For example, for the acetic acid production case, the corresponding webpage of phenDB pointed to the set of genomes that had been originally used. These genomes were recovered and the classifiers were re-trained to sync with the latest version of eggNOG. Under the Traits predicted based on phenDB models tab, we provide a description of each feature abbreviation returned from microbetag based on phen feautures, based on those from the phenDB group. The annotation is referring to the species under study. Each trait gets a “Yes” or “No” decision along with an accurracy score. For example NOB : species under study is part of the clade of NOB. Here is an example of how two GTDB genomes look like: . microbetag annotates all network nodes (corresponding to OTUs/ASVs/bins that have been identified to species/strain level) mapped to a representative GTDB genome with these functional traits and scores. ",
    "url": "/docs/modules#functional-annotations",
    
    "relUrl": "/docs/modules#functional-annotations"
  },"20": {
    "doc": "Modules",
    "title": "Pathway complementarity",
    "content": "As defined by the KEGG resource, “the KEGG MODULE database is a manually curated collection of modular functional units, categorized into pathway modules, signature modules and reaction modules”. All the GTDB representative genomes were KEGG annottated. Considering all pair-wised combinatons of those genomes, microbetag checks whether the KEGG Orthology (KO) terms of a genome (donor) could complete a KEGG module of another (beneficary), if shared. Here is an example where Acidiferrobacter sp. SPIII3 (GCA_003184265.1) potentially shares K01626 to complete the Shikimate pathway (M00022) of Prochlorococcus marinus AS9601 (GCA_000015645.1). As several genomes can be mapped to the same NCBI Taxonomy id, microbetag returns all possible complementarities between all the donor’s and the beneficary’s genomes. microbetag annotates all edges where both nodes represent species/strain level taxonomies with such complementarities. ",
    "url": "/docs/modules#pathway-complementarity",
    
    "relUrl": "/docs/modules#pathway-complementarity"
  },"21": {
    "doc": "Modules",
    "title": "Seed scores based on genome-scale draft reconstructions (GEMs)",
    "content": "Based on Borenstein et al. (2008) [5] a metabolic network’s “seed set” is the set of compounds that, based on the network topology, are exogenously acquired”. Here is an example (based on the Borensteil lab webpage): . Node A is a seed, as it cannot be activated by any other node in the network. Nodes F, G, and H are also seeds but they are interdependent, i.e. activating one of these nodes would activate the rest, but at least one must be active to activate the rest. These nodes form a “seed group”. To quantify the relevance of each identified seed, we assign each seed a confidence level (C), ranging from 0 to 1. A confidence level of 0 would correspond to a non-seed node, while a 1 would correspond to a seed that cannot be activated by another node. Seeds which belong to a seed group with more than 1 seed are given a fractional confidence level, the inverse of the number of seeds in the group. Based on the seed concept, several scores between metabolic models of pair of species have been described. As described in the PhyloMInt paper: the Metabolic Complementarity Index (\\(MI_{Complementarity}\\)) is calculated as the “fraction of the seed set of the genome-scale reconstruction of species A, that is found within B’s metabolic network but not part of B’s seed set, normalized by the number of A’s seed set in B’s entire metabolic network”. This complementarity score represents the potential for A’s to utilize the potential metabolic output of B. \\[MI_{Complementarity} = \\frac {\\lvert SeedSetA \\cap \\neg SeedSetB \\rvert} { SeedSetA \\cap (SeedSetB \\cup \\neg SeeedSetB)}\\] Similarly, as described in the PhyloMInt paper, the Metabolic Competition Index (\\(MI_{Competition}\\)) “is calculated as the fraction of A’s seed set that is also in B’s seed set, normalized by the weighted sum of the confidence score”. MIC estimates the baseline metabolic overlap between two given metabolic networks. \\[MI_{Competition} = \\frac {\\sum C( SeedSetA \\cap SeedSetB )} {\\sum C(SeedSetA)}\\] Here is a toy example to calculate the two indices as shown in the PhyloMInt paper: . In a comparison between metabolic network A versus metabolic network B, metabolic network A shares only one seed metabolite with metabolic network B (metabolite F) which lies in the seed group in metabolic network A. Thus, the \\(MI_{Competition}\\) between metabolic network A and B is \\((1/3) / 2 = 1/6\\). The \\(1/3\\) term represents the confidence level of the seed group node. Among SeedSetA, metabolites A and F are found within the metabolic network B but only metabolite A is within non-SeedSetB, thus the MIComplementarity index between metabolic network A and metabolic network B is 0.5. These indexes can be used in various types of metabolic networks. In the framework of microbetag, all GTDB representative genomes were used to come up with draft genome-scale reconstructions using modelseedpy with its default gapfilling algorithm and a complete medium. Then, all GEMs pair-wised combinations were considered and using PhyloMInt their \\(MI_{Complementarity}\\) and \\(MI_{Competition}\\) scores were calculated. microbetag annotates all edges between species/strain level taxonomically assigned nodes with such scores, considering all the representative GTDB genomes mapping to the corresponding NCBI Taxonomy ids of the nodes. ",
    "url": "/docs/modules#seed-scores-based-on-genome-scale-draft-reconstructions-gems",
    
    "relUrl": "/docs/modules#seed-scores-based-on-genome-scale-draft-reconstructions-gems"
  },"22": {
    "doc": "Modules",
    "title": "References",
    "content": "[1] Tackmann, J., Rodrigues, J.F.M. and von Mering, C., 2019. Rapid inference of direct interactions in large-scale ecological networks from heterogeneous microbial sequencing data. Cell systems, 9(3), pp.286-296, DOI: 10.1016/j.cels.2019.08.002. [2] Louca, S., Parfrey, L.W., Doebeli, M. (2016) - Decoupling function and taxonomy in the global ocean microbiome. Science 353:1272-1277, DOI: 10.1126/science.aaf4507. [3] Levy, R., Carr, R., Kreimer, A., Freilich, S., Borenstein, E. “NetCooperate: a network-based tool for inferring host-microbe and microbe-microbe cooperation.” BMC Bioinformatics, 2015. [4] Kreimer, A., Doron-Faigenboim, A., Borenstein, E., Freilich, S. “NetCmpt: a network-based tool for calculating the metabolic competition between bacterial species.” Bioinformatics, 2012. [5] Borenstein, E., Kupiec, M., Feldman, M.W. and Ruppin, E., 2008. Large-scale reconstruction and phylogenetic analysis of metabolic environments. Proceedings of the National Academy of Sciences, 105(38), pp.14482-14487. ",
    "url": "/docs/modules#references",
    
    "relUrl": "/docs/modules#references"
  },"23": {
    "doc": "Traits predicted based on phenDB models",
    "title": "Traits predicted based on phenDB models",
    "content": "Phen traits have been annotated to all representative GTDB genomes. Here are the corresponding abbreviations’ descriptions. Each function is referring to the species under study (node). | Abbreviation | Description | . | NOB | part of the clade of nitrite-oxidizing bacteria | . | T3SS | expresses a Type III secretion system | . | T6SS | expresses a Type VI secretion system | . | aSaccharolytic | has an asaccharolytic lifestyle | . | aceticAcid | produces acetic acid | . | aob | is part of the clade of ammonia-oxidizing bacteria | . | autoCo2 | is capable of growth with CO2 as sole carbon source | . | butanol | produces butanol | . | butyricAcid | produces butyric acid | . | dGlucose | utilizes D-glucose | . | dLacticAcid | produces D lactic acid | . | ethanol | species producing ethanol | . | fermentative | has a Fermentative lifestyle | . | fixingN2 | capable of fixing N2 | . | formicAcid | producing formic_acid | . | gtdbId* | GTDB id of the genome used for this analysis | . | halophilic | halophilic lifestyle | . | hydrogen | producing hydrogen | . | indole | producing indole | . | isobutyricAcid | producing isobutyric_acid | . | isovalericAcid | producing isovaleric_acid | . | lLacticAcid | producing L_lactic_acid | . | methanotroph | capable of growth with methane as the sole carbon source | . | nonFermentative | has a nonfermentative lifestyle | . | phototrophy | is able of phototrophy | . | psychrophilic | species has a psychrophilic lifestyle | . | rAcetoin | is producing R_acetoin | . | saccharolytic | has a Saccharolytic lifestyle | . | succinicAcid | is producing succinic_acid | . | sulfateReducer | is capable of using sulfate as terminal electron acceptor | . | symbiont | has an obligate intracellular lifestyle | . | thermophilic | species has a thermophilic lifestyle | . | not returned by a Phen model | . ",
    "url": "/docs/modules/phen-traits/",
    
    "relUrl": "/docs/modules/phen-traits/"
  },"24": {
    "doc": "Use case",
    "title": "Using microbetag: a real-world scenario",
    "content": "Dataset: . ",
    "url": "/docs/use_case/#using-microbetag-a-real-world-scenario",
    
    "relUrl": "/docs/use_case/#using-microbetag-a-real-world-scenario"
  },"25": {
    "doc": "Use case",
    "title": "Use case",
    "content": " ",
    "url": "/docs/use_case/",
    
    "relUrl": "/docs/use_case/"
  }
}
