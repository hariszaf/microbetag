# ------
# INPUT/OUTPUT
# ------
on_container:
  value: True
  description: If running through Docker set to true.
  required: True
  type: bool

io_path:
  path: //home/luna.kuleuven.be/u0156635/github_repos/KU/microbetag/tests/dev_io_microbetag
  description: Attention! All files to be mounted need to be under this directory.
  required: True
  type: Path

bins_fasta:
  folderName: my_bins
  description: Name of the folder with the bins .fasta files.
  required: True
  type: String

abundance_table_file: 
  fileName: thirty_Samples.tsv
  description: Filename of the abundance table file. The taxonomy scheme in this case is irrelevant.
  required: True
  type: String
# vitAbund.tsv

edge_list:
  value: edgelist.csv
  description: If co-occurrence network already available, please provide its edge list; a 2 column tab separated file
  required: False
  type: String

output_directory: 
  folderName: microbetag_run
  description: Name of the output folder that will be built inside the io_path directory.
  required: True
  type: String

otu_table_delim: 
  value: \t
  description: Delimeter used in the OTU table file 
  required: True
  type: String

# -----
# Metabolic network reconstruction 
# -----

gapfill_model:
  value: True
  description: If True, modelseedpy will gapfill the reconstruction. 
  type: bool

gapfill_media: 
  value: True
  description: If True, modelseedpy will 
  type: bool



max_length_for_complement_from_scratch:
  value: 3
  description: There are cases where a species has no KO related with a module but may get a complete alternative from the donor species. However, there are cases where a KEGG module consists of just 1-2 terms and other where dozins of KOs are required. Set the max length of a module that can be exchanged when no module related KO is present in the beneficiary in the first place.
  required: False
  type: Integer


pathway_complement_percentage:
  value: 0.35
  description: Per centage of the module (i.e., number of KO terms) up to which a potential donor may provide a beneficiary with. For example, if a module consists of 5 KOs and the beneficiary can share 4 missing from the donor, this is rather unlikely to happen. If no value is given all complementes will be returned.
  required: False
  type: float


network_clustering:
  value: False
  description:
  type: bool
  required: False



# [ATTENTION! dada2 and qiime2 tests highlight difference] Column names are in the last comment line prior to any
# The FAPROTAX step will break if this is not set properly
column_names_are_in  : False # dada2 -> False   qiime2 -> True



# METADATA 
# --------
metadata_file:
  fileName: 
  description: 
  type:

# build_network:
#   value: True
#   description: A co-occurrence network will be built using your abundance table, your metadata file (if provided) and FlashWeave. If selected, make sure you also set the FlashWeave arguments.
#   type: bool

flashweave_sensitive:
  value: True
  description: (From FlashWeave documentation) Enable fine-grained associations (FlashWeave-S, FlashWeaveHE-S), sensitive=false results in the fast modes FlashWeave-F or FlashWeaveHE-F 
  type: bool

flashweave_heterogeneous:
  value: False
  description: (From FlashWeave documentation) Enable heterogeneous mode for multi-habitat or -protocol data with at least thousands of samples (FlashWeaveHE)
  type: bool





threads:
  value: 2
  description: Number of CPUs to be used 
  type: Integer





min_proba:
  value: 0.6
  description: Minimum confidence that a prediction needs to have for keeping the the presence/absence finding.
  type: float














# STEPS 
# --------
PhenDB: True
FAPROTAX: True
# BugBase can be quite tricky to install in case you are not using the container option. 
# If you are still to use it, please make sure you have the $BUGBASE_PATH environmental variable as in the installation.sh script.
# Further, you need to remember that BugBase only works with GreenGenes IDs; you can get those using OTU pickers such as https://github.com/GabeAl/NINJA-OPS
# If no GreenGenes IDs for OTUs or IMG IDs for shotgun data are present, microbetag will fail (https://github.com/knights-lab/BugBase/issues/2)

pathway_complementarity: False


# Flashweave
flashweave_opt:

  # Else, microbetag will invoke flashweave to build a co-occurrence network; fill in its paratemeters
  # If edge_list is not empty, please skip this section
  algorithmic_parameters:

    --heterogeneous:                            # enable heterogeneous mode for multi-habitat or -protocol data 
                                                # with at least thousands of samples (FlashWeaveHE)
    --sensitive:                                # enable fine-grained associations (FlashWeave-S, FlashWeaveHE-S), 
                                                # sensitive=false results in the fast modes FlashWeave-F or FlashWeaveHE-F
    --max_k:                                    # maximum size of conditioning sets, high values can strongly increase 
                                                # runtime. max_k=0 results in no conditioning (univariate mode)
    --alpha:                                    # threshold used to determine statistical significance

    --conv:                                     # convergence threshold, i.e. if conv=0.01 assume convergence 
                                                # if the number of edges increased by only 1% after 100% more runtime (checked in intervals)
    --feed_forward:                             # enable feed-forward heuristic

    --max_tests:                                # maximum number of conditional tests that should be performed on a variable pair 
                                                # before association is assumed

    --hps:                                      # reliability criterion for statistical tests when sensitive=false

    --FDR:                                      # perform False Discovery Rate correction (Benjamini-Hochberg method) 
                                                # on pairwise associations
    --n_obs_min:                                # don't compute associations between variables having less reliable samples 
                                                # (i.e. non-zero if heterogeneous=true) than this number. 
                                                # -1: automatically choose a threshold.
    --time_limit:                               # if feed-forward heuristic is active, determines the interval (seconds) 
                                                # at which neighborhood information is updated

  general_parameters:
    --normalize:                     # automatically choose and perform data normalization (based on sensitive and heterogeneous)
    --track_rejections:              # store for each discarded edge, which variable set  lead to its exclusion (can be memory intense for large networks)
    --verbose:                       # print progress information
    --transposed:                    # if true, rows of data are variables and columns are samples
    --prec:                          # precision in bits to use for calculations (16, 32, 64 or 128)
    --make_sparse:                   # use a sparse data representation (should be left at true in almost all cases)



# FAPROTAX optional parameters
faprotax_opt: 
  --force: False

