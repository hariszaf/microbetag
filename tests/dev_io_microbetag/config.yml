# ------
# INPUT/OUTPUT
# ------
on_container:
  value: True
  description: If running through Docker set to true.
  required: true
  type: bool

io_path:
  path: /home/luna.kuleuven.be/u0156635/github_repos/KU/microbetag/tests/dev_io_microbetag
  description: Attention! All files to be mounted need to be under this directory.
  required: true
  type: Path

abundance_table_file: 
  fileName: thirty_Samples.tsv
  description: Filename of the abundance table file. The taxonomy scheme in this case is irrelevant.
  required: true
  examples: 
    - thirty_Samples.tsv
    - counts_genomes_taxonomies.tsv
  type: string

input_type_for_seed_complementarities:
  value: bins_fasta
  value_from: 
    - bins_fasta
    - coding_regions
    - proteins_faa
    - models
  description: "To reconstruct a GENRE, protein sequences of the annotated genes are required. If that step is already performed outside the microbetag workflow, you may provide the .faa files to be directly used for that step."
  type: string
  required: true

bins_fasta:
  folderName: my_bins
  description: Name of the folder with the bins .fasta files.
  required: False
  type: String

sequence_files_for_reconstructions:
  folderName: my_faa
  required: 
    value: True
    when: if input_type_for_seed_complementarities != "bins". Could be either .fna or .faa files.
  description:
  type:

edge_list:
  value: edgelist.csv
  description: If co-occurrence network already available, please provide its edge list; a 2 column tab separated file
  required: False
  examples: 
    - edgelist.csv
  type: String

output_directory: 
  folderName: microbetag_run
  description: Name of the output folder that will be built inside the io_path directory.
  required: True
  type: String

otu_table_delim: 
  value: \t
  description: Delimeter used in the OTU table file 
  required: True
  type: String

# -----
# Computing
# -----
threads:
  value: 2
  description: Number of CPUs to be used 
  type: Integer

# -----
# Metabolic network reconstruction 
# -----

gene_predictor:
  value: fragGeneScan
  value_from: 
    - fragGeneScan
    - prodigal
    - RAST
  required: 
    value: False
    when: orfs_per_bin is None
  description: RAST annotation is required/strongly suggested* if modelseedpy is going to be used as genre_reconstruction_with. \
              Otherwise, the user may choose among fragGeneScan or prodigal; in the latter, the .faa returned by DiTing will be used. 
  type: string
# * test whether we can use modelseedpy with .faa that are not coming from RAST....

genre_reconstruction_with:
  value: carveme
  value_from: 
    - modelseedpy
    - carveme
  required: True

gapfill_model:
  value: True
  description: If True, modelseedpy will gapfill the reconstruction. 
  type: Bool

gapfill_media: 
  value: True
  description: If True, modelseedpy will 
  type: Bool

# -----
# Pathway complementarity
# -----
max_length_for_complement_from_scratch:
  value: 3
  description: There are cases where a species has no KO related with a module but may get a complete alternative from the donor species. However, there are cases where a KEGG module consists of just 1-2 terms and other where dozins of KOs are required. Set the max length of a module that can be exchanged when no module related KO is present in the beneficiary in the first place.
  required: False
  type: Integer

pathway_complement_percentage:
  value: 0.35
  description: Per centage of the module (i.e., number of KO terms) up to which a potential donor may provide a beneficiary with. For example, if a module consists of 5 KOs and the beneficiary can share 4 missing from the donor, this is rather unlikely to happen. If no value is given all complementes will be returned.
  required: False
  type: float

# -----
# Phen traits prediction
# -----
min_proba:
  value: 0.6
  description: Minimum confidence that a prediction needs to have for keeping the the presence/absence finding.
  type: float

# -----
# manta 
# -----
network_clustering:
  value: False
  description:
  type: Bool
  required: False

# -----
# Flashweave
# -----
metadata_file:
  fileName: 
  description: 
  type:
  required: False

flashweave_args:
    
    heterogeneous:
      value: False
      description: enable heterogeneous mode for multi-habitat or -protocol data with at least thousands of samples (FlashWeaveHE)
      required: True
      type: Bool
    
    sensitive:
      value: True
      description: enable fine-grained associations (FlashWeave-S, FlashWeaveHE-S), sensitive=false results in the fast modes FlashWeave-F or FlashWeaveHE-F
      required: True
      type: Bool

    max_k:
      value:
      description: maximum size of conditioning sets, high values can strongly increase runtime. max_k=0 results in no conditioning (univariate mode)
      required: False
      type: Integer

    alpha:
      value:
      description:  threshold used to determine statistical significance
      required: False
      type: 

    conv:
      value:
      description: convergence threshold, i.e. if conv=0.01 assume convergence if the number of edges increased by only 1% after 100% more runtime (checked in intervals)
      required: 
      type: 

    feed_forward:
      value:
      description: enable feed-forward heuristic
      required:
      type:

    max_tests: 
      value:
      description: maximum number of conditional tests that should be performed on a variable pair before association is assumed
      required: false
      type:

    hps:
      value:
      description: reliability criterion for statistical tests when sensitive=false
      required:
      type:

    FDR:
      value:
      description: perform False Discovery Rate correction (Benjamini-Hochberg method) on pairwise associations 
      required: 
      type:

    n_obs_min:
      value: 
      desription: don't compute associations between variables having less reliable samples (i.e. non-zero if heterogeneous=true) than this number. -1  automatically choose a threshold.
      required: False
      type: Integer

    time_limit:
      value: 
      description: if feed-forward heuristic is active, determines the interval (seconds) at which neighborhood information is updated
      required: False
      type: 

    normalize:
      value: 
      description: automatically choose and perform data normalization (based on sensitive and heterogeneous)
      required: False
      type: Bool

    track_rejections:
      value: 
      description: store for each discarded edge, which variable set lead to its exclusion (can be memory intense for large networks)
      required: False
      type:

    verbose:
      value:
      description: print progress information
      required:
      type: Bool

